<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.board.mapper.BoardMapper">

    <sql id="search">
        <if test="type != null and keyword != null">
            <trim prefix="(" suffix=") AND" prefixOverrides="OR">
                <foreach item="type" collection="types">
                    <trim prefix="OR">
                        <choose>
                            <when test="type == 'T'.toString()">
                                (TITLE LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'C'.toString()">
                                (CONTENT LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'W'.toString()">
                                (WRITER LIKE '%'||#{keyword}||'%')
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>
<!--
    힌트(Hint) : /*+ [INDEX_DESC, INDEX_ASC]([테이블명] [PK명]) */
    SELECT문에 실행하고 싶은 계획을 전달할 때 사용하는 문법
    잘못 작성되어도 실행할 때에는 무시되며 별도의 오류는 발생하지 않는다.
    /*+로 시작되며 */로 마친다. 또한 뒤에 컬럼명을 작성할 때 ,를 사용하지 않는다.
    별도의 정렬이 필요없어지므로 속도가 향상된다.
-->
    <select id="getList" resultType="boardVO">
        <![CDATA[
            SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE, REPLYCOUNT
            FROM
                (
                SELECT /*+ INDEX_DESC(TBL_BOARD SYS_C007350)*/
                ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE, REPLYCOUNT
                FROM TBL_BOARD WHERE ]]>
                <include refid="search"></include>
         <![CDATA[
                ROWNUM <= #{pageNum} * #{amount}
                )
            WHERE RN > (#{pageNum} - 1) * #{amount}
        ]]>
    </select>

    <insert id="insert">
        INSERT INTO TBL_BOARD (BNO, TITLE, CONTENT, WRITER)
        VALUES(SEQ_BOARD.NEXTVAL, #{title}, #{content}, #{writer})
    </insert>

    <!--
        selectKey태그를 사용해서 SELECT문을 사용할 수 있다.
        keyProperty : 변수명
        order : 실행 순서(BEFORE라면 메인쿼리보다 먼저)
        resultType : 매개변수에 전달될 값의 타입
    -->
    <insert id="insertSelectBno">
        <selectKey keyProperty="bno" order="BEFORE" resultType="long">
            SELECT SEQ_BOARD.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_BOARD (BNO, TITLE, CONTENT, WRITER)
        VALUES(#{bno}, #{title}, #{content}, #{writer})
    </insert>

    <update id="update">
        UPDATE TBL_BOARD
        SET TITLE = #{title}, CONTENT = #{content}, UPDATEDATE = SYSDATE
        WHERE BNO = #{bno}
    </update>

    <delete id="delete">
        DELETE FROM TBL_BOARD
        WHERE BNO = #{bno}
    </delete>

    <select id="get" resultType="boardVO">
        SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE
        FROM TBL_BOARD
        WHERE BNO = #{bno}
    </select>

    <select id="getTotal" resultType="_int">
        SELECT COUNT(BNO) FROM TBL_BOARD
        <where>
            <trim suffixOverrides="AND">
                <include refid="search"></include>
            </trim>
        </where>
    </select>

    <update id="updateReplyCount">
        UPDATE TBL_BOARD
        SET REPLYCOUNT = REPLYCOUNT + #{status}
        WHERE BNO = #{bno}
    </update>
</mapper>